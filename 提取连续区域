#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <iostream> 
#include <vector>
using namespace std;

void onMouse(int event, int x, int y, int flags, void* param)
{
	cv::Mat *im = reinterpret_cast<cv::Mat*>(param);
	switch (event)
	{
	case cv::EVENT_LBUTTONDOWN:
		cv::Vec3b intensity = im->at<cv::Vec3b>(y, x);
		uchar blue = intensity[0];
		uchar green = intensity[1];
		uchar red = intensity[2];
		cout << "The value of"<< x<<"  "<<y<<
			"is:  " << (int)red << "  " << (int)green << "  " << (int)blue << endl;
	}
}

int main()
{
	cv::Mat img, img1, img2;
	cv::namedWindow("res", cv::WINDOW_AUTOSIZE);	
	cv::namedWindow("make", cv::WINDOW_AUTOSIZE);
	img = cv::imread("D:\\gray.jpg");

	cvtColor(img, img2, CV_BGR2GRAY);
	cv::threshold(img2, img1, 125, 255, CV_THRESH_BINARY);
	cv::imshow("make", img1);

	vector<vector<cv::Point>> contours;
	cv::findContours(img1, contours, cv::RETR_CCOMP, cv::CHAIN_APPROX_SIMPLE);
	cout << contours.size() << endl;
	if (!contours.empty())
	{
		cv::Mat result(img2.size(), CV_8U, cv::Scalar(255));
		cv::drawContours(result, contours, -1, 0, 2);
		cv::imshow("res", result);
	}


	cv::waitKey(0);
	return 0;
}