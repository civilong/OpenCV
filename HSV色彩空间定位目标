#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <iostream> 
#include "ColorHistogram.h"
#include "ContentFinder.h"
using namespace std;

void onMouse(int event, int x, int y, int flags, void* param);

void onMouse(int event, int x, int y, int flags, void* param)
{
	cv::Mat *im = reinterpret_cast<cv::Mat*>(param);
	switch (event)
	{
	case cv::EVENT_LBUTTONDOWN:
		cv::Vec3b intensity = im->at<cv::Vec3b>(y, x);
		uchar blue = intensity[0];
		uchar green = intensity[1];
		uchar red = intensity[2];
		cout << "The value of"<< x<<"  "<<y<<
			"is:  " << (int)red << "  " << (int)green << "  " << (int)blue << endl;
	}
}

int main()
{
	cv::Mat img1, img2, imageROI;
	ColorHistogram hc;
	ContentFinder  finder;

	img1 = cv::imread("D:\\3.jpg");
	img2 = cv::imread("D:\\2.jpg");
	cv::namedWindow("原始图像");
	cv::setMouseCallback("原始图像", onMouse, reinterpret_cast<void*>(&img1));
	cv::imshow("原始图像", img1);

	imageROI = img1(cv::Rect(167, 188, 160, 210));
	int minSat = 65;
	cv::Mat hueHist = hc.getHueHistogram(imageROI, minSat);
	finder.setHistogram(hueHist);

	cv::Mat hsv;
	cv::cvtColor(img2, hsv, CV_BGR2HSV);
	finder.setThreshold(-1.0f);
	int chl[1] = { 0 };
	cv::Mat result = finder.find(hsv, 0.0f, 180.0f, chl);

	cv::Rect rect(50, 50, 160, 210);
	cv::rectangle(img2, cv::Rect(50, 50, 160, 210), 0, 2);
	cv::TermCriteria criteria(cv::TermCriteria::MAX_ITER | cv::TermCriteria::EPS,
		20,
		1);
	int icount = cv::meanShift(result, rect, criteria);
	cv::rectangle(img2, rect, 0, 2);
	cout << icount << endl;

	cv::imshow("结果", img2);
	cv::imshow("结果1", result);

	cv::waitKey(0);
	return 0;
}