#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <iostream> 
#include <vector>
#include "HarrisDetector.h"

void onMouse(int event, int x, int y, int flags, void* param)
{
	cv::Mat *im = reinterpret_cast<cv::Mat*>(param);
	switch (event)
	{
	case cv::EVENT_LBUTTONDOWN:
		cv::Vec3b intensity = im->at<cv::Vec3b>(y, x);
		uchar blue = intensity[0];
		uchar green = intensity[1];
		uchar red = intensity[2];
		std::cout << "The value of"<< x<<"  "<<y<<
			"is:  " << (int)red << "  " << (int)green << "  " << (int)blue << std::endl;
	}
}

int main()
{
	cv::Mat img, img1;
	cv::namedWindow("Resource", cv::WINDOW_AUTOSIZE);	
	cv::namedWindow("Result", cv::WINDOW_AUTOSIZE);
	img = cv::imread("D:\\gray.jpg");
	cv::cvtColor(img, img1, CV_BGR2GRAY);
	cv::imshow("Resource", img);


	HarrisDetector harris;
	harris.detect(img1);
	std::vector<cv::Point> points;
	harris.getCorners(points, 0.02);
	harris.drawOnImage(img1, points);
	
	cv::imshow("Result", img1);
	

	cv::waitKey(0);
	return 0;
}